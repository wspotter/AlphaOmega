# ╔══════════════════════════════════════════════════════════════════════════════╗
# ║                         DOCKER POLICY - READ THIS                            ║
# ╠══════════════════════════════════════════════════════════════════════════════╣
# ║  Docker is ONLY APPROVED for:                                                ║
# ║    1. ComfyUI (image generation - complex dependencies)                      ║
# ║    2. Chatterbox TTS (requires Python 3.11+)                                 ║
# ║                                                                               ║
# ║  ALL OTHER SERVICES RUN LOCALLY:                                             ║
# ║    - OpenWebUI: Local Python (port 8080)                                     ║
# ║    - Ollama: Local binary (ports 11434, 11435)                               ║
# ║    - Agent-S: Local Python (port 8001)                                       ║
# ║    - mcpart: Local Node.js (port 3000)                                       ║
# ║    - mcpo: Local Go binary (port 8002)                                       ║
# ║                                                                               ║
# ║  DO NOT add other services to this file!                                     ║
# ╚══════════════════════════════════════════════════════════════════════════════╝

version: '3.8'

services:
  # ComfyUI - GPU 2 (MI50 #3) - Image Generation
  # APPROVED: Complex dependencies, ROCm integration
  comfyui:
    build:
      context: ./comfyui_bridge
      dockerfile: Dockerfile
    container_name: alphaomega-comfyui
    ports:
      - "${COMFYUI_PORT:-8188}:8188"
    volumes:
      - ./models/comfyui:/app/models
      - ./comfyui_bridge/workflows:/app/workflows
      - ./comfyui_bridge/output:/app/output
    environment:
      - HSA_OVERRIDE_GFX_VERSION=9.0.0
      - ROCR_VISIBLE_DEVICES=2
      - PYTORCH_HIP_ALLOC_CONF=garbage_collection_threshold:0.8,max_split_size_mb:512
    devices:
      - /dev/kfd:/dev/kfd
      - /dev/dri:/dev/dri
    restart: unless-stopped
    networks:
      - alphaomega-network

  # Chatterbox TTS - High-quality local text-to-speech
  # APPROVED: Requires Python 3.11+, complex audio dependencies
  chatterbox:
    build:
      context: ./tts
      dockerfile: Dockerfile.chatterbox
    container_name: alphaomega-chatterbox
    ports:
      - "5003:5003"
    volumes:
      - ./tts:/app
    restart: unless-stopped
    networks:
      - alphaomega-network

networks:
  alphaomega-network:
    driver: bridge
    name: alphaomega-network

volumes:
  comfyui_models:
    driver: local
